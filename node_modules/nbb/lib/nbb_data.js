
import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
'use strict';var e3=function(a,b){return $APP.C.h(a,b)?new $APP.I(null,3,5,$APP.J,[null,null,a],null):new $APP.I(null,3,5,$APP.J,[a,b,null],null)},fpa=function(a){return $APP.x(a)?$APP.Ye.j(function(b,c){var d=$APP.D.j(c,0,null);c=$APP.D.j(c,1,null);return $APP.mj.j(b,d,c)},$APP.Mh($APP.nt.h($APP.$g.h($APP.ho,$APP.gj(a)),null)),a):null},gpa=function(a,b,c){var d=$APP.Ne.h(a,c),e=$APP.Ne.h(b,c),f=f3(d,e),g=$APP.D.j(f,0,null),l=$APP.D.j(f,1,null);f=$APP.D.j(f,2,null);a=$APP.Pe(a,c);b=$APP.Pe(b,c);d=
a&&b&&(null!=f||null==d&&null==e);return new $APP.I(null,3,5,$APP.J,[!a||null==g&&d?null:$APP.Dg([c,g]),!b||null==l&&d?null:$APP.Dg([c,l]),d?$APP.Dg([c,f]):null],null)},h3=function(a,b){var c=$APP.Uj,d=c.h,e=g3.j,f=$APP.Ce(a)?a:$APP.Mh(a),g=$APP.Ce(b)?b:$APP.Mh(b),l=$APP.io.g;a=$APP.ce(a);b=$APP.ce(b);return $APP.Mh(d.call(c,fpa,e.call(g3,f,g,l.call($APP.io,a>b?a:b))))},hpa=function(a,b){return new $APP.I(null,3,5,$APP.J,[$APP.Gg($APP.wU.h(a,b)),$APP.Gg($APP.wU.h(b,a)),$APP.Gg($APP.vU.h(a,b))],null)},
i3=function(a){if(null!=a&&null!=a.Bh)a=a.Bh(a);else{var b=i3[$APP.ha(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=i3._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.vb("EqualityPartition.equality-partition",a);}return a},j3=function(a,b){if(null!=a&&null!=a.Ah)a=a.Ah(a,b);else{var c=j3[$APP.ha(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=j3._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.vb("Diff.diff-similar",a);}return a},f3=function(a,
b){return $APP.C.h(a,b)?new $APP.I(null,3,5,$APP.J,[null,null,a],null):$APP.C.h(i3(a),i3(b))?j3(a,b):e3(a,b)},k3=new $APP.H(null,"sequential","sequential",-1082983960),l3=new $APP.H(null,"atom","atom",-397043653),m3=new $APP.v(null,"diff","diff",-518492986,null),ipa=new $APP.v("clojure.data","diff","clojure.data/diff",-683865998,null);var g3=function g3(a){switch(arguments.length){case 2:return g3.h(arguments[0],arguments[1]);case 3:return g3.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.r.g(arguments.length)].join(""));}};g3.h=function(a,b){return g3.j(a,b,$APP.uU.h($APP.gj(a),$APP.gj(b)))};g3.j=function(a,b,c){return $APP.Ye.j(function(d,e){return $APP.bo.g($APP.Uj.j($APP.Im,d,e))},new $APP.I(null,3,5,$APP.J,[null,null,null],null),$APP.Uj.h($APP.Km.j(gpa,a,b),c))};g3.o=3;i3["null"]=function(){return l3};
i3.string=function(){return l3};i3.number=function(){return l3};i3.array=function(){return k3};i3["function"]=function(){return l3};i3["boolean"]=function(){return l3};i3._=function(a){return(null!=a?a.F&1024||$APP.td===a.rh||(a.F?0:$APP.sb($APP.Wb,a)):$APP.sb($APP.Wb,a))?$APP.En:(null!=a?a.F&4096||$APP.td===a.uh||(a.F?0:$APP.sb($APP.$b,a)):$APP.sb($APP.$b,a))?$APP.Nn:(null!=a?a.F&16777216||$APP.td===a.xf||(a.F?0:$APP.sb($APP.uc,a)):$APP.sb($APP.uc,a))?k3:l3};
j3["null"]=function(a,b){return e3(a,b)};j3.string=function(a,b){return e3(a,b)};j3.number=function(a,b){return e3(a,b)};j3.array=function(a,b){return h3(a,b)};j3["function"]=function(a,b){return e3(a,b)};j3["boolean"]=function(a,b){return e3(a,b)};
j3._=function(a,b){var c=function(){var d=i3(a);d=d instanceof $APP.H?d.ga:null;switch(d){case "atom":return e3;case "set":return hpa;case "sequential":return h3;case "map":return g3;default:throw Error(["No matching clause: ",$APP.r.g(d)].join(""));}}();return c.h?c.h(a,b):c.call(null,a,b)};var jpa=$APP.Dw($APP.NM),kpa=new $APP.k(null,1,[m3,function(){var a=new $APP.yd(function(){return f3},ipa,$APP.Ti([$APP.T,$APP.P,$APP.Qm,$APP.WA,$APP.Vn,$APP.Rm,$APP.XA,$APP.X,$APP.Z,$APP.YA],[$APP.NM,m3,"clojure/data.cljs",11,1,144,144,$APP.K(new $APP.I(null,2,5,$APP.J,[$APP.nF,$APP.iF],null)),"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.",
$APP.n(f3)?f3.I:null])),b=$APP.t(a);a=$APP.se(a);var c=$APP.n(null)?null:$APP.P.g(a),d=new $APP.k(null,4,[$APP.T,jpa,$APP.P,c,$APP.X,$APP.X.g(a),$APP.Z,$APP.Z.g(a)],null);return $APP.n($APP.mr.g(a))?$APP.xw(c,b,d):$APP.n($APP.Pq.g(a))?$APP.yw(c,b,d):$APP.ww(c,b,d)}()],null);try{$APP.sx(new $APP.k(null,1,[$APP.$q,new $APP.k(null,1,[$APP.NM,kpa],null)],null))}catch(a){throw console.error("An error occurred when calling (nbb.impl.data/init)"),a;};
export { $APP, shadow$provide, $jscomp };
