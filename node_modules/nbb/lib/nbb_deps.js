import * as esm_import$child_process from "child_process";
import * as esm_import$crypto from "crypto";
import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
'use strict';var SY=new $APP.H(null,"deps","deps",1883360319);var TY=esm_import$child_process;var xna=esm_import$crypto;try{var UY=$APP.Ip.h($APP.t($APP.qW),new $APP.I(null,2,5,$APP.J,[$APP.KL,SY],null));if($APP.n(UY)){var VY;VY=xna.createHash("sha1").update($APP.r.g(UY),"binary").digest("hex");var WY=[$APP.r.g(".nbb/.cache"),"/",$APP.r.g(VY)].join(""),XY=[WY,"/deps.edn"].join(""),YY=[WY,"/nbb-deps.jar"].join(""),ZY=[WY,"/nbb-deps"].join("");$APP.n($APP.cx.existsSync(ZY))||($APP.cx.mkdirSync(WY,{recursive:!0}),$APP.cx.writeFileSync(XY,$APP.r.g(new $APP.k(null,1,[SY,UY],null))),$APP.GC.l($APP.E(["Downloading dependencies..."])),
TY.execSync(["bb --config ",XY," uberjar ",YY].join("")),$APP.GC.l($APP.E(["Extracting dependencies..."])),TY.execSync(["bb -e '(fs/unzip \"",YY,'" "',ZY,"\")'"].join("")),$APP.GC.l($APP.E(["Done."])));$APP.Rp(ZY)}}catch(a){throw console.error("An error occurred when calling (nbb.impl.deps/init)"),a;};
export { $APP, shadow$provide, $jscomp };
